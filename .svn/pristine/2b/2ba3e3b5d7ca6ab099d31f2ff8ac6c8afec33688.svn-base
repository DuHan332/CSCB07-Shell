package command;

import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import driver.Tracker;
import exception.SystemErrorException;

public class SaveJShell implements Commands {
  public String getManual() {
    String Manual = "saveJShell FileName: \nWhen the above command is "
        + "typed, the entire state of the program would be\nwritten to the file "
        + "FileName. The file FileName is some file that is stored\non the actual "
        + "filesystem of computer.This command we enable users to save the\nsession"
        + " of the JShell before it is closed down. If file FileName does not\nexist,"
        + " it would create a file save.txt on computer that will save the session "
        + "\nof the JShell. If the above file exists on computer, this file would "
        + "be\noverwritten compleletly";
    return Manual;
  }

  public String execute(String[] fileName, Tracker tracker) throws SystemErrorException {
    if (fileName.length > 1) {
      throw new SystemErrorException("This command can only take one argument");
    }
    try {
      FileOutputStream fileOut = new FileOutputStream(fileName[0]);
      ObjectOutputStream out = new ObjectOutputStream(fileOut);
      out.writeObject(tracker);
      out.close();
      fileOut.close();
      return "JShell has been saved";
    } catch (Exception e) {
      e.printStackTrace();
    }
    return null;
  }


}
