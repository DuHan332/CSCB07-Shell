package command;

import nodetype.Directory;
import driver.Tracker;
/**
 * This class is implemented from from interface Commands and it is able to 
 * print the current working directory including the whole path.
 * @author Yuanqian Fang
 *
 */
public class PrintWorkingDirectory implements Commands{
 /**
  * The function would check the input first and return error if the input is 
  * not valid.The the function would search the path from current directory 
  * until it finds the root directory and it returns a string that contains the 
  * whole path that standing for current working directory.
  * 
  * @param input input from the user
  * @param track  a Tracker that track the root directory and current directory
  * @return a string that contains error information if the input is invalid, 
  * otherwise the string shows the current working directory including the whole
  * path.
  * 
  */
 public String execute(String[] input, Tracker track){
    if(input.length!=0) {
      return "can't take a input";
    }
    else {
       String result ="";
       Directory currentdirectory = track.getCurrent_directory();
       if(currentdirectory == track.getRoot_directory()) {
         return "/";
       }
       else {
          while(currentdirectory != track.getRoot_directory()) {
            result ="/" + currentdirectory.getName()+ result;
            currentdirectory = currentdirectory.getRoot();    
           }
         return result;
       }
       
    }
  }
}
