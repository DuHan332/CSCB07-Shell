package command;

import java.util.ArrayList;
import driver.Tracker;
import nodetype.*;
import helper.FindPath;
import exception.SystemErrorException;

public class EchoOverwrite {
    public void overwrite(String input_content, String path, Tracker tracker) throws SystemErrorException{
      String content = input_content.substring(1,input_content.length()-1);
      ArrayList<String> full_path = path_to_arraylist(path);
      ArrayList<String> sub_path = new ArrayList<String>();
      for(String s:full_path) {
        sub_path.add(s);
      }
      String filename = full_path.get(full_path.size()-1);
      sub_path.remove(sub_path.size()-1);  
       if(path.substring(0,1).equals("/")==false){
         int result = echo_overwrite(content,filename,full_path, sub_path,tracker.getCurrent_directory());
         if(result==2) throw new SystemErrorException("This is not a file");
         if(result==4) throw new SystemErrorException("Not allowed to create a file in a file");
         if(result==5) throw new SystemErrorException("The path doesn't exist");
       }
       else {
         int result = echo_overwrite(content,filename,full_path, sub_path,tracker.getRoot_directory());
         if(result==2) throw new SystemErrorException("This is not a file");
         if(result==4) throw new SystemErrorException("Not allowed to create a file in a file");
         if(result==5) throw new SystemErrorException("The path doesn't exist");
       }
}
      
    private int echo_overwrite(String content,String filename, ArrayList<String> full_path,ArrayList<String> sub_path, Directory directory){
      JNode full = FindPath.findpath(full_path, directory);
      JNode sub  = FindPath.findpath(sub_path, directory);
      if(full!=null) {
        if(full.getIs_directory()==false){
          File return_outfile = (File) full;
          return_outfile.setContent(content);
            return 1;
        }
        else {
          return 2;
        }
      }
      else { 
        if(sub!=null){
          if(sub.getIs_directory()==true){
            add((Directory)sub, filename, content);
            return 3;
          }
          else return 4;
          }
        else return 5;
      }
    }
        
      private ArrayList<String> path_to_arraylist(String path){
      String[] path_list = path.split("/");
      ArrayList<String> result = new  ArrayList<>();
      for(String s:path_list) {
        result.add(s);
      }
      if(result.get(0).equals("")) result.remove(0);
      return result;
    }
      private void add(Directory to_add, String filename, String content) {
        File file = new File(content,to_add,filename);
        to_add.getSub().add(file);

        }

}
